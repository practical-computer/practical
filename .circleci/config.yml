# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

rails_build: &rails_build
  resource_class: small
  docker:
    - image: cimg/ruby:3.4.6-browsers
  environment:
    BUNDLE_JOBS: '3'
    BUNDLE_RETRY: '3'
    RAILS_ENV: test
    PARALLEL_WORKERS: 3
    COVERAGE: 1

orbs:
  ruby: circleci/ruby@2.1.1
  node: circleci/node@6.3.0

jobs:
  lint:
    resource_class: medium
    docker:
      - image: cimg/ruby:3.4.6
    steps:
      - checkout
      - ruby/install-deps
      - ruby/rubocop-check:
          format: progress
          label: Inspecting with Rubocop
          parallel: true
  coverage:
    resource_class: small
    docker:
      - image: cimg/ruby:3.4.6
    environment:
      RAILS_ENV: test
    steps:
      - checkout
      - attach_workspace:
          at: .
      - ruby/install-deps
      - run:
          name: Merge and check coverage
          command: |
            bundle exec rake app:coverage:report
      - store_artifacts:
          path: coverage

      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: Format coverage results for CodeClimate
          command: |
            ./cc-test-reporter format-coverage -t simplecov -o tmp/codeclimate.json

      - run:
          name: Upload to CodeClimate
          command: |
            ./cc-test-reporter upload-coverage -i tmp/codeclimate.json

  test:
    <<: *rails_build
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages
      - run:
          command: bundle exec rails db:schema:load --trace
          name: Database setup
      - run: bin/dummy_rails app:javascript:build
      - run: bin/dummy_rails app:dartsass:build
      - run: bundle exec bin/test
      - store_test_results:
          path: test/reports

      - store_artifacts:
          path: log/

      - store_artifacts:
          path: tmp/capybara/

      - run:
          name: Stash Coverage Results
          command: |
            mkdir coverage_results
            cp -R coverage/.resultset.json coverage_results/.resultset-${CIRCLE_JOB}-${CIRCLE_NODE_INDEX}.json
      - persist_to_workspace:
          root: .
          paths:
            - coverage_results

workflows:
  build_and_test:
    jobs:
      - lint:
          context:
            - "Practical Framework"
      - test:
          context:
            - "Practical Framework"
      # - coverage:
      #     context:
      #       - "Practical Framework"
      #     requires:
      #       - test
